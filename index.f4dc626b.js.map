{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAE9B,EAAmB,SAAC,CAAA,CAAQ,CAAA,CAAU,CAAA,CAAO,CAAA,CAAa,CAAhE,EACE,IAAM,EAAU,SAAS,aAAa,CAAC,OAEvC,WAAW,WACT,EAAQ,MAAM,EAChB,EAAG,KAEH,EAAQ,YAAY,CAAC,UAAW,gBAEhC,EAAQ,KAAK,CAAC,GAAG,CAAG,GAAU,MAAA,CAAP,EAAO,MAC9B,EAAQ,KAAK,CAAC,KAAK,CAAG,GAAY,MAAA,CAAT,EAAS,MAElC,EAAQ,SAAS,CAAG,gBAAqB,MAAA,CAAL,GAEpC,EAAQ,kBAAkB,CAAC,YAAc,6BAGjC,MAAA,CAFgB,EAAM,8BAEV,MAAA,CAAZ,EAAY,uBAIpB,EAAK,MAAM,CAAC,EACd,EAGM,EAAU,AADH,SAAS,aAAa,CAAC,SACf,aAAa,CAAC,MAC7B,EAAY,SAAS,aAAa,CAAC,SACnC,EAAW,EAAU,gBAAgB,CAAC,MAE5C,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,IAAM,EAAK,EAAE,MAAM,CAAC,UAAU,CAI7B,EAFoB,EAAU,gBAAgB,CAAC,OAE9B,OAAO,CAAC,SAAA,CAAzB,EACK,IAAQ,GAAO,EAAI,SAAS,CAAC,QAAQ,CAAC,UAGxC,EAAI,SAAS,CAAC,MAAM,CAAC,UAFrB,EAAI,SAAS,CAAC,GAAG,CAAC,SAItB,EACF,GAgBA,OAAO,gBAAgB,CAAC,OAAQ,SAAC,CAAjC,EACG,EAAG,EAAQ,QAAQ,EAAE,GAAG,CAAC,SAAA,CAAzB,EAAmC,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar body = document.querySelector(\"body\");\nvar pushNotification = function(posTop, posRight, title, description, type) {\n    var element = document.createElement(\"div\");\n    setTimeout(function() {\n        element.remove();\n    }, 2000);\n    element.setAttribute(\"data-qa\", \"notification\");\n    element.style.top = \"\".concat(posTop, \"px\");\n    element.style.right = \"\".concat(posRight, \"px\");\n    element.className = \"notification \".concat(type);\n    element.insertAdjacentHTML(\"beforeend\", '\\n      <h2 class=\"title\">'.concat(title, \"</h2>\\n      <p>\\n        \").concat(description, \"\\n      </p>\\n    \"));\n    body.append(element);\n};\nvar head = document.querySelector(\"thead\");\nvar headRow = head.querySelector(\"tr\");\nvar tableBody = document.querySelector(\"tbody\");\nvar bodyRows = tableBody.querySelectorAll(\"tr\");\ntableBody.addEventListener(\"click\", function(e) {\n    var el = e.target.parentNode;\n    var currBodyRows = tableBody.querySelectorAll(\"tr\");\n    _to_consumable_array(currBodyRows).forEach(function(row) {\n        if (row === el && !row.classList.contains(\"active\")) row.classList.add(\"active\");\n        else row.classList.remove(\"active\");\n    });\n});\nfunction resetButtons(e) {\n    _to_consumable_array(headRow.children).map(function(button) {\n        if (button !== e.target) button.setAttribute(\"data-dir\", \"asc\");\n        else if (button.getAttribute(\"data-dir\") === \"desc\") button.setAttribute(\"data-dir\", \"asc\");\n        else button.setAttribute(\"data-dir\", \"desc\");\n    });\n}\nwindow.addEventListener(\"load\", function(e) {\n    _to_consumable_array(headRow.children).map(function(button) {\n        return button.setAttribute(\"data-dir\", \"asc\");\n    });\n});\nheadRow.addEventListener(\"click\", sort);\nfunction sort(e) {\n    var order = e.target.getAttribute(\"data-dir\");\n    var indexSortField = _to_consumable_array(headRow.children).indexOf(e.target);\n    switch(order){\n        case \"desc\":\n            descF(e, indexSortField);\n            break;\n        case \"asc\":\n            ascF(e, indexSortField);\n            break;\n    }\n    resetButtons(e);\n}\nfunction descF(e, i) {\n    switch(e.target.textContent){\n        case \"Name\":\n        case \"Position\":\n        case \"Office\":\n            var newBodyRows1 = _to_consumable_array(bodyRows).sort(function(a, b) {\n                return b.cells[i].textContent.localeCompare(a.cells[i].textContent);\n            });\n            bodyRows.forEach(function(node) {\n                return node.parentNode.removeChild(node);\n            });\n            newBodyRows1.forEach(function(node) {\n                return tableBody.appendChild(node);\n            });\n            break;\n        case \"Age\":\n        case \"Salary\":\n            var newBodyRows4 = _to_consumable_array(bodyRows).sort(function(a, b) {\n                var aSalaryStr = a.cells[i].textContent.replace(/[^\\d]/g, \"\");\n                var aSalaryValue = parseInt(aSalaryStr, 10);\n                var bSalaryStr = b.cells[i].textContent.replace(/[^\\d]/g, \"\");\n                var bSalaryValue = parseInt(bSalaryStr, 10);\n                return bSalaryValue - aSalaryValue;\n            });\n            bodyRows.forEach(function(node) {\n                return node.parentNode.removeChild(node);\n            });\n            newBodyRows4.forEach(function(node) {\n                return tableBody.appendChild(node);\n            });\n            break;\n    }\n}\nfunction ascF(e, i) {\n    switch(e.target.textContent){\n        case \"Name\":\n        case \"Position\":\n        case \"Office\":\n            var newBodyRows1 = _to_consumable_array(bodyRows).sort(function(a, b) {\n                return a.cells[i].textContent.localeCompare(b.cells[i].textContent);\n            });\n            bodyRows.forEach(function(node) {\n                return node.parentNode.removeChild(node);\n            });\n            newBodyRows1.forEach(function(node) {\n                return tableBody.appendChild(node);\n            });\n            break;\n        case \"Age\":\n        case \"Salary\":\n            var newBodyRows4 = _to_consumable_array(bodyRows).sort(function(a, b) {\n                var aSalaryStr = a.cells[i].textContent.replace(/[^\\d]/g, \"\");\n                var aSalaryValue = parseInt(aSalaryStr, 10);\n                var bSalaryStr = b.cells[i].textContent.replace(/[^\\d]/g, \"\");\n                var bSalaryValue = parseInt(bSalaryStr, 10);\n                return aSalaryValue - bSalaryValue;\n            });\n            bodyRows.forEach(function(node) {\n                return node.parentNode.removeChild(node);\n            });\n            newBodyRows4.forEach(function(node) {\n                return tableBody.appendChild(node);\n            });\n            break;\n    }\n}\ndocument.body.insertAdjacentHTML(\"beforeend\", '\\n  <form class=\"new-employee-form\" method=\"POST\">\\n    <label>\\n      Name:\\n      <input\\n        name=\"name\"\\n        type=\"text\"\\n        data-qa=\"name\"\\n        required\\n      >\\n    </label>\\n\\n    <label>\\n      Position:\\n      <input\\n        name=\"position\"\\n        type=\"text\"\\n        data-qa=\"position\"\\n        required\\n      >\\n    </label>\\n\\n    <label>\\n      Office:\\n      <select name=\"office\" data-qa=\"office\">\\n        <option>Tokyo</option>\\n        <option>Singapore</option>\\n        <option>London</option>\\n        <option>New York</option>\\n        <option>Edinburgh</option>\\n        <option>San Francisco</option>\\n      </select>\\n    </label>\\n\\n    <label>\\n      Age:\\n      <input\\n        name=\"age\"\\n        type=\"number\"\\n        data-qa=\"age\"\\n        min=\"0\"\\n        required\\n      >\\n    </label>\\n\\n    <label>\\n      Salary:\\n      <input\\n        name=\"salary\"\\n        type=\"number\"\\n        data-qa=\"salary\"\\n        min=\"0\"\\n        required\\n      >\\n    </label>\\n\\n    <button type=\"submit\">Save to table</button>\\n  </form>\\n');\nvar form = document.querySelector(\"form\");\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var data = new FormData(form);\n    var newEmployee = Object.fromEntries(data.entries());\n    newEmployee.salary = \"$\".concat((newEmployee.salary / 1000).toFixed(3).toString().replace(\".\", \",\"));\n    var newRow = document.createElement(\"tr\");\n    newRow.innerHTML = \"\\n    <td>\".concat(newEmployee.name, \"</td>\\n    <td>\").concat(newEmployee.position, \"</td>\\n    <td>\").concat(newEmployee.office, \"</td>\\n    <td>\").concat(newEmployee.age, \"</td>\\n    <td>\").concat(newEmployee.salary, \"</td>\\n  \");\n    if (newEmployee.name.length < 4 && (+newEmployee.age < 18 || +newEmployee.age > 90)) {\n        pushNotification(10, 10, \"Error\", 'Field \"Name\" should has at leact 5 char', \"error\");\n        pushNotification(150, 10, \"Error\", 'Field \"Age\" should be more than 4 and less than 90', \"error\");\n        return;\n    }\n    if (+newEmployee.age < 18 || +newEmployee.age > 90) {\n        pushNotification(10, 10, \"Error\", 'Field \"Age\" should be more than 4 and less than 90', \"error\");\n        return;\n    }\n    if (newEmployee.name.length < 4) {\n        pushNotification(10, 10, \"Error\", 'Field \"Name\" should has at leact 5 char', \"error\");\n        return;\n    }\n    pushNotification(10, 10, \"Success\", \"New employee successfylly added\", \"success\");\n    tableBody.append(newRow);\n    form.reset();\n});\n\n//# sourceMappingURL=index.f4dc626b.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const element = document.createElement('div');\n\n  setTimeout(() => {\n    element.remove();\n  }, 2000);\n\n  element.setAttribute('data-qa', 'notification');\n\n  element.style.top = `${posTop}px`;\n  element.style.right = `${posRight}px`;\n\n  element.className = `notification ${type}`;\n\n  element.insertAdjacentHTML('beforeend', `\n      <h2 class=\"title\">${title}</h2>\n      <p>\n        ${description}\n      </p>\n    `);\n\n  body.append(element);\n};\n\nconst head = document.querySelector('thead');\nconst headRow = head.querySelector('tr');\nconst tableBody = document.querySelector('tbody');\nconst bodyRows = tableBody.querySelectorAll('tr');\n\ntableBody.addEventListener('click', (e) => {\n  const el = e.target.parentNode;\n\n  const currBodyRows = tableBody.querySelectorAll('tr');\n\n  [...currBodyRows].forEach(row => {\n    if (row === el && !row.classList.contains('active')) {\n      row.classList.add('active');\n    } else {\n      row.classList.remove('active');\n    }\n  });\n});\n\nfunction resetButtons(e) {\n  [...headRow.children].map(button => {\n    if (button !== e.target) {\n      button.setAttribute('data-dir', 'asc');\n    } else {\n      if (button.getAttribute('data-dir') === 'desc') {\n        button.setAttribute('data-dir', 'asc');\n      } else {\n        button.setAttribute('data-dir', 'desc');\n      }\n    }\n  });\n}\n\nwindow.addEventListener('load', (e) => {\n  [...headRow.children].map(button => button.setAttribute('data-dir', 'asc'));\n});\n\nheadRow.addEventListener('click', sort);\n\nfunction sort(e) {\n  const order = e.target.getAttribute('data-dir');\n  const indexSortField = [...headRow.children].indexOf(e.target);\n\n  switch (order) {\n    case 'desc':\n      descF(e, indexSortField);\n      break;\n    case 'asc':\n      ascF(e, indexSortField);\n      break;\n  }\n\n  resetButtons(e);\n}\n\nfunction descF(e, i) {\n  switch (e.target.textContent) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      const newBodyRows1 = [...bodyRows].sort((a, b) => (\n        b.cells[i].textContent.localeCompare(a.cells[i].textContent)\n      ));\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows1.forEach(node => tableBody.appendChild(node));\n\n      break;\n\n    case 'Age':\n    case 'Salary':\n      const newBodyRows4 = [...bodyRows].sort((a, b) => {\n        const aSalaryStr = a.cells[i].textContent.replace(/[^\\d]/g, '');\n        const aSalaryValue = parseInt(aSalaryStr, 10);\n        const bSalaryStr = b.cells[i].textContent.replace(/[^\\d]/g, '');\n        const bSalaryValue = parseInt(bSalaryStr, 10);\n\n        return bSalaryValue - aSalaryValue;\n      });\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows4.forEach(node => tableBody.appendChild(node));\n\n      break;\n  }\n};\n\nfunction ascF(e, i) {\n  switch (e.target.textContent) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      const newBodyRows1 = [...bodyRows].sort((a, b) => (\n        a.cells[i].textContent.localeCompare(b.cells[i].textContent)\n      ));\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows1.forEach(node => tableBody.appendChild(node));\n\n      break;\n\n    case 'Age':\n    case 'Salary':\n      const newBodyRows4 = [...bodyRows].sort((a, b) => {\n        const aSalaryStr = a.cells[i].textContent.replace(/[^\\d]/g, '');\n        const aSalaryValue = parseInt(aSalaryStr, 10);\n        const bSalaryStr = b.cells[i].textContent.replace(/[^\\d]/g, '');\n        const bSalaryValue = parseInt(bSalaryStr, 10);\n\n        return aSalaryValue - bSalaryValue;\n      });\n\n      bodyRows.forEach(node => node.parentNode.removeChild(node));\n      newBodyRows4.forEach(node => tableBody.appendChild(node));\n\n      break;\n  }\n};\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form class=\"new-employee-form\" method=\"POST\">\n    <label>\n      Name:\n      <input\n        name=\"name\"\n        type=\"text\"\n        data-qa=\"name\"\n        required\n      >\n    </label>\n\n    <label>\n      Position:\n      <input\n        name=\"position\"\n        type=\"text\"\n        data-qa=\"position\"\n        required\n      >\n    </label>\n\n    <label>\n      Office:\n      <select name=\"office\" data-qa=\"office\">\n        <option>Tokyo</option>\n        <option>Singapore</option>\n        <option>London</option>\n        <option>New York</option>\n        <option>Edinburgh</option>\n        <option>San Francisco</option>\n      </select>\n    </label>\n\n    <label>\n      Age:\n      <input\n        name=\"age\"\n        type=\"number\"\n        data-qa=\"age\"\n        min=\"0\"\n        required\n      >\n    </label>\n\n    <label>\n      Salary:\n      <input\n        name=\"salary\"\n        type=\"number\"\n        data-qa=\"salary\"\n        min=\"0\"\n        required\n      >\n    </label>\n\n    <button type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n\n  const newEmployee = Object.fromEntries(data.entries());\n\n  newEmployee.salary = `$${\n    (newEmployee.salary / 1000).toFixed(3).toString().replace('.', ',')\n  }`;\n\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${newEmployee.name}</td>\n    <td>${newEmployee.position}</td>\n    <td>${newEmployee.office}</td>\n    <td>${newEmployee.age}</td>\n    <td>${newEmployee.salary}</td>\n  `;\n\n  if (newEmployee.name.length < 4\n    && (+(newEmployee.age) < 18 || +(newEmployee.age) > 90)) {\n    pushNotification(\n      10, 10, 'Error', 'Field \"Name\" should has at leact 5 char', 'error',\n    );\n\n    pushNotification(\n      150, 10, 'Error',\n      'Field \"Age\" should be more than 4 and less than 90', 'error',\n    );\n\n    return;\n  }\n\n  if (+(newEmployee.age) < 18 || +(newEmployee.age) > 90) {\n    pushNotification(\n      10, 10, 'Error',\n      'Field \"Age\" should be more than 4 and less than 90', 'error',\n    );\n\n    return;\n  }\n\n  if (newEmployee.name.length < 4) {\n    pushNotification(\n      10, 10, 'Error', 'Field \"Name\" should has at leact 5 char', 'error',\n    );\n\n    return;\n  }\n\n  pushNotification(10, 10,\n    'Success', 'New employee successfylly added', 'success',\n  );\n\n  tableBody.append(newRow);\n\n  form.reset();\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","body","document","querySelector","pushNotification","posTop","posRight","title","description","type","element","createElement","setTimeout","remove","setAttribute","style","top","concat","right","className","insertAdjacentHTML","append","headRow","head","tableBody","bodyRows","querySelectorAll","addEventListener","e","el","target","parentNode","forEach","row","classList","contains","add","window","children","map","button","order","getAttribute","indexSortField","indexOf","descF","textContent","newBodyRows1","sort","a","b","cells","localeCompare","node","removeChild","appendChild","newBodyRows4","aSalaryValue","parseInt","replace","bSalaryValue","ascF","form","preventDefault","newEmployee","fromEntries","data","FormData","entries","salary","toFixed","newRow","innerHTML","position","office","age","reset"],"version":3,"file":"index.f4dc626b.js.map"}